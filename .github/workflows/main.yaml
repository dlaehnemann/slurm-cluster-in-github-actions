name: slurm_setup_tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  slurm_setup:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      # The following is based on:
      # https://omnivector-solutions.github.io/osd-documentation/master/installation.html
      - name: install juju via snap
        shell: bash
        run: |
          set -euxo pipefail
          df -h
          # --classic should be fine, according to:
          # https://askubuntu.com/a/1354774/1110862
          sudo snap install juju --classic
      - name: Setup LXD
        # uses pre-installed LXD snap (22.04 comes with 5.0/stable)
        # installs and initializes LXD
        # https://github.com/canonical/setup-lxd
        uses: canonical/setup-lxd@v0.1.0
      - name: configure lxc network
        shell: bash
        run: |
          lxc network set lxdbr0 ipv6.address none
      - name: bootstrap local cloud
        shell: bash
        run: |
          set -euxo pipefail
          juju bootstrap localhost --debug
          juju add-model slurm
      - name: install and deploy slurm bundle
        shell: bash
        env:
          # VERSION: 1.4.0
          COMMIT: 402854b8c28a50a2f03f0c75d411af36c5ce6ca6
        run: |
          set -euxo pipefail
          # The last released version, 1.4.0, is much older than a lot of further (unreleased) commits,
          # so I switched to pinning to a particular commit.
          # wget https://github.com/omnivector-solutions/slurm-bundles/archive/refs/tags/${VERSION}.tar.gz
          # tar xzf ${VERSION}.tar.gz
          git clone https://github.com/omnivector-solutions/slurm-bundles
          cd slurm-bundles
          git checkout ${COMMIT}
          cat slurm-core/bundle.yaml
          cat slurm-core/clouds/lxd.yaml
          cat slurm-core/series/focal.yaml
          juju deploy ./slurm-core/bundle.yaml \
            --overlay ./slurm-core/clouds/lxd.yaml \
            --overlay ./slurm-core/series/focal.yaml \
            --show-log
          # wait until the workload-status of the slurmctld is "active"
          until juju status --format=json | \
            jq '.applications[].units[]["workload-status", "juju-status"].current' | \
            grep -c -P "active|idle" | \
            grep -P "^10$"; \
            do sleep 15 ; done
          juju status --format=json | \
            jq '.applications[].units[]["workload-status", "juju-status"].current'
      - name: start up slurm cluster
        shell: bash
        run: |
          set -euxo pipefail
          juju status --color
          # check cluster status
          juju run --unit slurmctld/0 sinfo
          # start up node, from down to idle state
          juju run-action slurmd/0 node-configured --wait
          # check cluster status again
          juju run --unit slurmctld/0 sinfo
          juju run --unit slurmctld/0 scontrol show partition
          juju run --unit slurmctld/0 srun --partition=osd-slurmd -vvvv echo "hello world"
      - name: log into and submit stuff to slurm cluster
        shell: bash
        run: |
          set -euxo pipefail
          # https://stackoverflow.com/a/24756847/2352071
          # https://juju.is/docs/olm/juju-ssh
          juju ssh slurmctld/0
          srun -vvvv echo "hello world"
          exit
      - name: take down slurm and lxd
        shell: bash
        run: |
          set -euxo pipefail
          # https://juju.is/docs/olm/removing-things
          juju destroy-model -y slurm --force --no-wait
          # https://docs.rockylinux.org/guides/containers/lxd_web_servers/#starting-stopping
          lxc stop --all
          # https://snapcraft.io/docs/service-management
          sudo snap stop lxd.daemon
          sudo snap stop lxd
          sudo snap remove juju
          df -h

